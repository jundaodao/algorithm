稳定性定义：排序后，相同数字的前后顺序是否保持一致。 比如 {2,3,2} 排序后第一个 2 是否与第二个 2 相对位置保持一致

====================================================================
                    6大排序算法汇总
====================================================================
6大排序算法             时间复杂度         空间复杂度       是否稳定
选择排序                O(N^2)            O(1)           否
冒泡排序                O(N^2)            O(1)           是
插入排序                O(N^2)            O(1)           是
归并排序                O(NlogN)          O(N)           是
快速排序(随机)           O(NlogN)          O(logN)        否
堆排序                  O(NlogN)          O(1)           是

总结：根据以往大佬的经验，快排是里面速度最快的，所以能用快排就用快排；缺点空间复杂度做不到O(1)
堆排序：空间有限(O(1)空间复杂度)
归并排序：需要用到稳定性的时候用归并排序，缺点空间复杂度O(N) 有些高


工程上对排序的优化回答：
1、充分利用 O(NlogN)和O(N^2)排序的各自优势
比如：在堆排序和归并排序的时候，如果样本量小「小于 60」直接用插入排序，虽然时间复杂度不同，但是样本小根本体现不出来差别
2、稳定性考虑
比如 Arrays.sort() 里面如果是基本类型他直接用快速排序，但是如果是用户自定义的类型，他适用归并排序来考虑稳定性「因为他不知道先后顺序对用户来讲是不是有用，索性就提供稳定性了」




